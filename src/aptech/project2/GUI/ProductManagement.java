/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aptech.project2.GUI;

import aptech.project2.model.Catalog;
import aptech.project2.model.Product;
import aptech.project2.service.CatalogJpaController;
import aptech.project2.service.ProductJpaController;
import aptech.project2.service.exceptions.NonexistentEntityException;
import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class ProductManagement extends javax.swing.JFrame {

    /**
     * Creates new form UserManager
     */
    private Product product = null;
    private int productID = -1;
    private Product newProduct;
    private List<Product> ps;

    public ProductManagement() {
        initComponents();

        showComboBrand();
        showComboStatus();
        loadData();

        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ImportTable = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblimport = new javax.swing.JTable();
        btnaddfromcsv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbTransaction = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbmessage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        txtdiscount = new javax.swing.JTextField();
        txtimage = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBoxBrand = new javax.swing.JComboBox<>();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        ImageArea = new javax.swing.JPanel();
        picture = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblproduct = new javax.swing.JTable();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnimport = new javax.swing.JButton();
        txtmessage = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        ImportTable.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ImportTable.setMinimumSize(new java.awt.Dimension(794, 300));

        tblimport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên", "Giá", "Số lượng", "Thông số", "Chiết khấu", "Hình ảnh", "Tình trạng", "Hãng"
            }
        ));
        tblimport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblimportMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblimport);

        btnaddfromcsv.setText("ADD ALL");
        btnaddfromcsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddfromcsvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ImportTableLayout = new javax.swing.GroupLayout(ImportTable.getContentPane());
        ImportTable.getContentPane().setLayout(ImportTableLayout);
        ImportTableLayout.setHorizontalGroup(
            ImportTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImportTableLayout.createSequentialGroup()
                .addGroup(ImportTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ImportTableLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ImportTableLayout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(btnaddfromcsv, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        ImportTableLayout.setVerticalGroup(
            ImportTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImportTableLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnaddfromcsv, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        jPanel2.setBackground(new java.awt.Color(35, 46, 66));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setForeground(java.awt.Color.lightGray);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_settings.png"))); // NOI18N
        jLabel9.setText("Setting");

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(java.awt.Color.lightGray);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_home.png"))); // NOI18N
        jLabel10.setText("DashBoard");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(java.awt.Color.lightGray);
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_product.png"))); // NOI18N
        jLabel11.setText("Product ");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/logout.png"))); // NOI18N
        jLabel17.setText("Log Out");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(java.awt.Color.lightGray);
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_orders.png"))); // NOI18N
        jLabel12.setText("Orders");

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel13.setForeground(java.awt.Color.lightGray);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_user.png"))); // NOI18N
        jLabel13.setText("Profile");

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel14.setForeground(java.awt.Color.lightGray);
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_catalog.png"))); // NOI18N
        jLabel14.setText("Catagories");

        lbTransaction.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lbTransaction.setForeground(java.awt.Color.lightGray);
        lbTransaction.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aptech/project2/image/ic_transaction.png"))); // NOI18N
        lbTransaction.setText("Transaction");
        lbTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTransactionMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SHOWROOM CAR");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(lbTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbmessage.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lbmessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "PRODUCT MANGERMENT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N
        jPanel3.setAutoscrolls(true);
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Tên sản phẩm");

        jLabel3.setText("Giá");

        jLabel4.setText("Số lượng");

        jLabel5.setText("Chiết khấu");

        jLabel6.setText("Thông số");

        txtimage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtimageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtimageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtimageKeyTyped(evt);
            }
        });

        jLabel7.setText("Hình ảnh");

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane1.setViewportView(txtContent);

        jLabel8.setText("Tình trạng");

        jLabel15.setText("Hãng");

        ImageArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ImageArea.setMaximumSize(new java.awt.Dimension(258, 163));
        ImageArea.setMinimumSize(new java.awt.Dimension(258, 163));

        picture.setMaximumSize(new java.awt.Dimension(258, 163));
        picture.setMinimumSize(new java.awt.Dimension(258, 163));
        picture.setPreferredSize(new java.awt.Dimension(258, 1));

        javax.swing.GroupLayout ImageAreaLayout = new javax.swing.GroupLayout(ImageArea);
        ImageArea.setLayout(ImageAreaLayout);
        ImageAreaLayout.setHorizontalGroup(
            ImageAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        ImageAreaLayout.setVerticalGroup(
            ImageAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxBrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtimage, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtprice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addComponent(txtquantity, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtdiscount)
                                .addComponent(txtname)))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ImageArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtprice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtimage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jComboBoxBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ImageArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên", "Giá", "Số lượng", "Thông số", "Chiết khấu", "Hình ảnh", "Tình trạng", "Hãng"
            }
        ));
        tblproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblproductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblproduct);

        btnadd.setText("THÊM");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setText("CẬP NHẬT");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnimport.setText("IMPORT CSV");
        btnimport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbmessage, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmessage)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(btnimport, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 237, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbmessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtmessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnimport, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void lbTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTransactionMouseClicked
        TransactionMangerment transactionMangerment = new TransactionMangerment();
        transactionMangerment.setVisible(true);
        dispose();
    }//GEN-LAST:event_lbTransactionMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

        if (productID == -1) {
            txtmessage.setText("Bạn chưa chọn sản phẩm!");
            txtmessage.setForeground(Color.red);
            return;
        } else {
            String check = "Bạn có chắc chắn muốn xóa sản phẩm" + productID + " không ?";
            int choose = JOptionPane.showConfirmDialog(null, check,
                    "Xác Nhận Xoá", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.ERROR_MESSAGE);
            if (choose == 0) {
                try {
                    ProductJpaController.getInstance().destroy(productID);
                    txtmessage.setText("Xóa thành công sản phẩm  " + productID + " !");
                    txtmessage.setForeground(Color.GREEN);
                    productID = -1;
                    this.loadData();
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(UserManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        Product product = new Product();

        String name = txtname.getText();
        String price = txtprice.getText();
        String quantity = txtquantity.getText();
        String discount = txtdiscount.getText();
        String image = txtimage.getText();
        String content = txtContent.getText();

        String brand = (String) jComboBoxBrand.getSelectedItem();
        Catalog c = CatalogJpaController.getInstance().findCatalog(brand);
        int brandId = c.getId();

        int status = jComboBoxStatus.getSelectedIndex();

        if (name == "" || name.trim().equals("")) {
            txtmessage.setText("Tên sản phẩm không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (price == "" || price.trim().equals("")) {
            txtmessage.setText("giá không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(price, "^[0-9]+")) {
            txtmessage.setText("giá phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (quantity == "" || quantity.trim().equals("")) {
            txtmessage.setText("số lượng không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(quantity, "[0-9]+")) {
            txtmessage.setText("số lượng phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (discount == "" || discount.trim().equals("")) {
            txtmessage.setText("chiết khấu không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(discount, "[0-9]+")) {
            txtmessage.setText("chiết khấu phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (image == "" || image.trim().equals("")) {
            txtmessage.setText("hình ảnh không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (content == "" || quantity.trim().equals("")) {
            txtmessage.setText("Thông số không được để trống!");
            txtmessage.setForeground(Color.red);
        } else {

            product.setName(name);
            product.setPrice(Integer.parseInt(price));
            product.setQuantity(Integer.parseInt(quantity));
            product.setDiscount(Integer.parseInt(discount));
            product.setImage(image);
            product.setCatalogId(c);
            product.setStatus((short) status);
            product.setContent(content);
            ProductJpaController.getInstance().create(product);

            loadData();
            txtmessage.setText("Thêm thành công ô tô " + product.getName());
            txtmessage.setForeground(Color.GREEN);

        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        String name = txtname.getText();
        String price = txtprice.getText();
        String quantity = txtquantity.getText();
        String discount = txtdiscount.getText();
        String image = txtimage.getText();
        String content = txtContent.getText();

        String brand = (String) jComboBoxBrand.getSelectedItem();
        Catalog c = CatalogJpaController.getInstance().findCatalog(brand);
        int brandId = c.getId();

        int status = jComboBoxStatus.getSelectedIndex();

        if (name == "" || name.trim().equals("")) {
            txtmessage.setText("Tên sản phẩm không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (price == "" || price.trim().equals("")) {
            txtmessage.setText("giá không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(price, "^[0-9]+")) {
            txtmessage.setText("giá phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (quantity == "" || quantity.trim().equals("")) {
            txtmessage.setText("số lượng không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(quantity, "[0-9]+")) {
            txtmessage.setText("số lượng phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (discount == "" || discount.trim().equals("")) {
            txtmessage.setText("chiết khấu không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (!validate(discount, "[0-9]+")) {
            txtmessage.setText("chiết khấu phải là số!");
            txtmessage.setForeground(Color.red);
        } else if (image == "" || image.trim().equals("")) {
            txtmessage.setText("hình ảnh không được để trống!");
            txtmessage.setForeground(Color.red);
        } else if (content == "" || quantity.trim().equals("")) {
            txtmessage.setText("Thông số không được để trống!");
            txtmessage.setForeground(Color.red);
        } else {

            product.setName(name);
            product.setPrice(Integer.parseInt(price));
            product.setQuantity(Integer.parseInt(quantity));
            product.setDiscount(Integer.parseInt(discount));
            product.setImage(image);
            product.setCatalogId(c);
            product.setStatus((short) status);
            product.setContent(content);
            try {
                ProductJpaController.getInstance().edit(product);
                loadData();
                txtmessage.setText("Cập nhật thành công ô tô " + product.getName());
                txtmessage.setForeground(Color.GREEN);
            } catch (Exception ex) {
                Logger.getLogger(ProductManagement.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnimportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportActionPerformed
        // TODO add your handling code here:

        File file;
        String currentDirectoryPath = "aptech-project2/src";
        JFileChooser jfc = new JFileChooser(currentDirectoryPath);
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("csv", "csv");
        jfc.setFileFilter(fnef);
        int chooser = jfc.showOpenDialog(null);
        file = jfc.getSelectedFile();
        ps = new ArrayList<>();
        if (chooser == JFileChooser.APPROVE_OPTION) {
            ImportTable.setVisible(true);
            FileReader fr = null;
            BufferedReader br = null;
            try {
                fr = new FileReader(file);
                br = new BufferedReader(fr);

                while (br.ready()) {
                    String line = br.readLine();
                    String product[] = line.split(",");
                    String name = product[0];
                    int price = Integer.parseInt(product[1]);
                    int quantity = Integer.parseInt(product[1]);
                    String content = product[3];
                    int discount = Integer.parseInt(product[4]);
                    String image = product[5];
                    String statusString = product[6];
                    short status;
                    if ("Stocking".equals(statusString)) {
                        status = 0;
                    } else if ("Out of stock".equals(statusString)) {
                        status = 1;
                    } else if ("Stop producing".equals(statusString)) {
                        status = 2;
                    } else {
                        status = 3;
                    }
                    String brand = product[7];
                    Catalog c = CatalogJpaController.getInstance().findCatalog(brand);

                    ps.add(new Product(name, price, quantity, content, discount, image, status, c));
                }
                DefaultTableModel tableModel = (DefaultTableModel) tblimport.getModel();
                tableModel.setRowCount(0);
                ps.forEach(p -> {
                    int status = p.getStatus();
                    String statusString = "";
                    if (status == 0) {
                        statusString = "Stocking";
                    } else if (status == 1) {
                        statusString = "Out of stock";
                    } else if (status == 2) {
                        statusString = "Stop producing";
                    } else {
                        statusString = "Wait for the products";
                    }

                    Object[] rowData = new Object[]{
                        p.getId(), p.getName(), p.getPrice(), p.getQuantity(), p.getContent(), p.getDiscount(), p.getImage(), statusString, p.getCatalogId().getName()

                    };
                    tableModel.addRow(rowData);
                });
            } catch (IOException ex) {
                Logger.getLogger(ProductManagement.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnimportActionPerformed

    private void tblproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblproductMouseClicked

        productID = Integer.parseInt(tblproduct.getModel().getValueAt(tblproduct.getSelectedRow(), 0).toString());
        System.out.println(productID);
        this.displayDetail(productID);
    }//GEN-LAST:event_tblproductMouseClicked

    private void displayDetail(int productID) {
        this.product = ProductJpaController.getInstance().findProduct(productID);
        txtname.setText(product.getName());
        txtprice.setText(String.valueOf(product.getPrice()));
        txtquantity.setText(String.valueOf(product.getQuantity()));
        txtdiscount.setText(String.valueOf(product.getDiscount()));
        txtimage.setText(product.getImage());
        txtContent.setText(product.getContent());
        Catalog c = product.getCatalogId();
        jComboBoxBrand.setSelectedItem(c.getName());
        jComboBoxStatus.setSelectedIndex(product.getStatus());
        picture.setIcon(null);
        try {
            // TODO add your handling code here:
//            System.out.println("ok");
            String path = txtimage.getText();
//            JLabel pic = new JLabel(image);
            int width = ImageArea.getWidth();
            int height = ImageArea.getHeight();
            ImageIcon image = new ImageIcon(getClass().getResource(path));
            image.setImage(image.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));
            picture.setIcon(image);
//            picture.setText(path);
//            ImageArea.add(pic);
        } catch (NullPointerException ex) {
            picture.setText("No image found");
        }

    }


    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        ProductManagement productManagement = new ProductManagement();
        productManagement.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel11MouseClicked

    private void txtimageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtimageKeyTyped

    }//GEN-LAST:event_txtimageKeyTyped

    private void txtimageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtimageKeyReleased
        picture.setIcon(null);
        try {
            String path = txtimage.getText();
            int width = ImageArea.getWidth();
            int height = ImageArea.getHeight();
            ImageIcon image = new ImageIcon(getClass().getResource(path));
            image.setImage(image.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));
            picture.setIcon(image);
        } catch (NullPointerException ex) {
            picture.setText("No image found");
        }
    }//GEN-LAST:event_txtimageKeyReleased

    private void txtimageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtimageKeyPressed

    }//GEN-LAST:event_txtimageKeyPressed

    private void tblimportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblimportMouseClicked
        // TODO add your handling code here:
        newProduct = new Product();
        newProduct.setName(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 0).toString());
        newProduct.setPrice(Integer.parseInt(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 1).toString()));
        newProduct.setQuantity(Integer.parseInt(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 2).toString()));
        newProduct.setContent(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 3).toString());
        newProduct.setDiscount(Integer.parseInt(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 4).toString()));
        newProduct.setImage(tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 5).toString());
        String statusString = tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 6).toString();
        if ("Stocking".equals(statusString)) {
            newProduct.setStatus((short) 0);
        } else if ("Out of stock".equals(statusString)) {
            newProduct.setStatus((short) 1);
        } else if ("Stop producing".equals(statusString)) {
            newProduct.setStatus((short) 2);
        } else {
            newProduct.setStatus((short) 3);
        }

        String cname = tblimport.getModel().getValueAt(tblimport.getSelectedRow(), 7).toString();
        Catalog c = CatalogJpaController.getInstance().findCatalog(cname);
        newProduct.setCatalogId(c);
    }//GEN-LAST:event_tblimportMouseClicked

    private void btnaddfromcsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddfromcsvActionPerformed
        // TODO add your handling code here:
        if (tblimport.getSelectedRow() == -1) {
            for (int i = 0; i < tblimport.getRowCount(); i++) {
                newProduct = new Product();
                newProduct.setName(tblimport.getModel().getValueAt(i, 0).toString());
                newProduct.setPrice(Integer.parseInt(tblimport.getModel().getValueAt(i, 1).toString()));
                newProduct.setQuantity(Integer.parseInt(tblimport.getModel().getValueAt(i, 2).toString()));
                newProduct.setContent(tblimport.getModel().getValueAt(i, 3).toString());
                newProduct.setDiscount(Integer.parseInt(tblimport.getModel().getValueAt(i, 4).toString()));
                newProduct.setImage(tblimport.getModel().getValueAt(i, 5).toString());
                String statusString = tblimport.getModel().getValueAt(i, 6).toString();
                if ("Stocking".equals(statusString)) {
                    newProduct.setStatus((short) 0);
                } else if ("Out of stock".equals(statusString)) {
                    newProduct.setStatus((short) 1);
                } else if ("Stop producing".equals(statusString)) {
                    newProduct.setStatus((short) 2);
                } else {
                    newProduct.setStatus((short) 3);
                }
                String cname = tblimport.getModel().getValueAt(i, 7).toString();
                Catalog c = CatalogJpaController.getInstance().findCatalog(cname);
                newProduct.setCatalogId(c);
                ProductJpaController.getInstance().create(newProduct);
            }
            this.loadData();
            ImportTable.dispose();
        } else {
            ProductJpaController.getInstance().create(newProduct);
            this.loadData();
            ImportTable.dispose();
        }
    }//GEN-LAST:event_btnaddfromcsvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ImageArea;
    private javax.swing.JFrame ImportTable;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnaddfromcsv;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnimport;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> jComboBoxBrand;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbTransaction;
    private javax.swing.JLabel lbmessage;
    private javax.swing.JLabel picture;
    private javax.swing.JTable tblimport;
    private javax.swing.JTable tblproduct;
    private javax.swing.JTextArea txtContent;
    private javax.swing.JTextField txtdiscount;
    private javax.swing.JTextField txtimage;
    private javax.swing.JLabel txtmessage;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        List<Product> products = ProductJpaController.getInstance().findProductEntities();
        DefaultTableModel tableModel = (DefaultTableModel) tblproduct.getModel();
        tableModel.setRowCount(0);
        products.forEach(p -> {
            int status = p.getStatus();
            String statusString = "";
            if (status == 0) {
                statusString = "Stocking";
            } else if (status == 1) {
                statusString = "Out of stock";
            } else if (status == 2) {
                statusString = "Stop producing";
            } else {
                statusString = "Wait for the products";
            }

            Object[] rowData = new Object[]{
                p.getId(), p.getName(), p.getPrice(), p.getQuantity(), p.getContent(), p.getDiscount(), p.getImage(), statusString, p.getCatalogId().getName()

            };
            tableModel.addRow(rowData);
        });
    }

    private void showComboBrand() {
        List<Catalog> catalogs = CatalogJpaController.getInstance().findCatalogEntities();
        catalogs.forEach(a -> {
            jComboBoxBrand.addItem(a.getName());
        });
    }

    private void showComboStatus() {
        jComboBoxStatus.addItem("Stocking");
        jComboBoxStatus.addItem("Out of stock");
        jComboBoxStatus.addItem("Stop producing");
        jComboBoxStatus.addItem("Wait for the products");
    }

    private boolean validate(String s, String regex) {
        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(s);
        return m.matches();
    }

  
}
